{
    "env": {
        "commonjs": true,
        "es6": true,
        "node": true
    },
    "plugins": [
        "jquery",
        "@typescript-eslint"
    ],
    "extends": [
        "standard-with-typescript",
        "plugin:vue/vue3-recommended"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parser": "vue-eslint-parser",
    "parserOptions": {
        "parser": "@typescript-eslint/parser",
        "ecmaVersion": 2018,
        "project": "./tsconfig.json",
        "extraFileExtensions": [".vue"]
    },
    "rules": {
        "space-before-function-paren": [
            2,
            "always"
        ],
        // The following rule-changes to JSStandard Coding Style are tradition,
        // as they were included with the default configuration of Atom's ESLint
        // plugin, so we'll keep them here for the time being.
        "prefer-const": "off",
        "quote-props": "off",
        "no-prototype-builtins": "off",
        "dot-notation": "off",
        "array-bracket-spacing": [
            2,
            "always",
            {
                "objectsInArrays": false,
                "singleValue": false
            }
        ],
        // Here follow vue-styles. While the short form is recommended
        // I tend to value verbose code. At least for now, discussion is
        // well received.
        "vue/v-bind-style": [
            "error",
            "longform"
        ],
        "vue/v-on-style": [
            "error",
            "longform"
        ],
        "vue/component-tags-order": [
            "error",
            {
                "order": [
                    "template",
                    "script",
                    "style"
                ]
            }
        ],
        // Let the implementation decide if self-closing is wanted or not.
        "vue/html-self-closing": [ "warn", {
          "html": {
            "void": "any",
            "normal": "any",
            "component": "any"
          },
          "svg": "any",
          "math": "any"
        }],

        // Disallow jquery
        "jquery/no-ajax": 2,
        "jquery/no-ajax-events": 2,
        "jquery/no-animate": 2,
        "jquery/no-bind": 2,
        "jquery/no-fade": 2,
        "jquery/no-load": 2,
        "jquery/no-param": 2,
        "jquery/no-serialize": 2,
        "jquery/no-size": 2,
        "jquery/no-sizzle": 2,
        "jquery/no-slide": 2,
        "jquery/no-submit": 2,
        "jquery/no-text": 2,
        "jquery/no-toggle": 2,
        "jquery/no-trigger": 2,
        "jquery/no-trim": 2,
        "jquery/no-val": 2,
        "jquery/no-when": 2,
        "jquery/no-wrap": 2,

        // Disable a few typescript rules as we are not yet there to easily implement them
        "@typescript-eslint/no-floating-promises": [ "warn" ],
        "@typescript-eslint/no-misused-promises": [ "warn" ],
        "@typescript-eslint/strict-boolean-expressions": [ "warn" ],
        // This rule is necessary for the FSAL Cache (featuring safe deletion of keys)
        "@typescript-eslint/no-dynamic-delete": [ "warn" ],
        // Only warn if there's no array comparison given
        "@typescript-eslint/require-array-sort-compare": [ "warn" ]
    }
}
